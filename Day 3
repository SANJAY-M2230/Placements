def user_logic(grid):
    n = len(grid)
    m = len(grid[0])
    
    # Initialize DP table
    dp = [[0] * m for _ in range(n)]
    
    dp[0][0] = grid[0][0]
    
    # Fill first row
    for j in range(1, m):
        dp[0][j] = dp[0][j-1] + grid[0][j]
    
    # Fill first column
    for i in range(1, n):
        dp[i][0] = dp[i-1][0] + grid[i][0]
    
    # Fill rest of the DP table
    for i in range(1, n):
        for j in range(1, m):
            dp[i][j] = grid[i][j] + min(dp[i-1][j], dp[i][j-1])
    
    return dp[n-1][m-1]


def main():
    import sys
    input = sys.stdin.read
    data = input().strip().split()

    n = int(data[0])  # The first input is the integer n (rows)
    m = int(data[1])  # The second input is the integer m (columns)

    grid = []
    index = 2
    for i in range(n):
        row = list(map(int, data[index:index + m]))
        grid.append(row)
        index += m

    # Call user logic function and print the output
    result = user_logic(grid)
    print(result)


if __name__ == "__main__":
    main()
