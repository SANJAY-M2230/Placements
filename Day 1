def longest_palindromic_substring_length(n, s):
  if n == 0:
        return 0

    max_len = 1

    def expand_around_center(left, right):
        nonlocal max_len
        while left >= 0 and right < n and s[left] == s[right]:
            current_len = right - left + 1
            if current_len > max_len:
                max_len = current_len
            left -= 1
            right += 1

    for i in range(n):
        # Odd length palindromes
        expand_around_center(i, i)
        # Even length palindromes
        expand_around_center(i, i + 1)

    return max_len
    pass


def main():
    import sys
    input = sys.stdin.read
    data = input().strip().split()
    
    n = int(data[0])  # First input is the integer N
    s = data[1]  # Second input is the string S
    
    # Call user logic function and print the output
    result = longest_palindromic_substring_length(n, s)
    print(result)

if __name__ == "__main__":
    main()
